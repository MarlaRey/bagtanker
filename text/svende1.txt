Mandag
jeg var spændt på om jeg kunne bruge noget fra mediesuset, det kunne jeg. men der er lige lidt forventeligt opstartsknas. man skal mange ting igennem når man sætter sådan et projekt her op. ruter og hierakier er vigtige, for ikke at tale om relationerne i supabase og tvivlen om hvorvidt man nu gør det rigtigt med den datsabase. men jeg har fået hul igennem til nogle news og tilhørende billeder på forsiden så nu er vi i gang. 

TIRSDAG
Issues
i dag har jeg fået lavet et githubproject med issues og det giver et fint overblik. men da jeg åbner min side ser den slet ikke ud som jeg husker. forsiden er helt skør, det må jeg lige starte med at undersøge hvad skyldes. 

Husk gitignore!
Det var en træls start med mit første push til github igår, fordi jeg havde glemt at lave en gitignore! så huhej og research fik jeg heldigvis slettet min .env fra historikken alligevel. men det er ikke sådan bare lige lige der på github. jeg oprettede en gitignore og pushede den og kørte: 
"git rm --cached .env" og 
"git commit -m "Fjern .env fra version control" og
"brew install bfg" og
"bfg --delete-files .env" og
"git reflog expire --expire=now --all && git gc --prune=now --aggressive"

Mus er i udu
det er rigtig ubelejligt og træls, jeg bestiller straks en ny over nettet.

Ahaa
det er fordi jeg tilføjede ".module" til alle mine scss-sheets i går og nu er der ikke forbindelse, jeg må finde ud af hvorfor. jeg finder ud af at måned man arbejder med modules jo har nogle andre tilgange. Disse skal importeres og klasserne skal kaldes på en anden måde. jeg tror lige jeg får oprettet et issue som tager hånd om dette i min backlog, for det kommer da til at tage lidt tid....

Layoutstruktur
jeg skal bygge det gennemgårende design som kan omkranse alle sider pånær forsiden. jeg bygger derfor et komponent til dette, som hedder Layout og inkluderer det omkring min routing i App, på alle elementer pånær forsiden.

SLideshowets højde og dots
jeg ønsker at slideshowet skal gå igen på alle sider, men kun have fuld højde og dots på forsiden. 

For at få slideshowet til at køre med fuld højde og vise dots på forsiden, mens det tilpasses højden og skjuler dots i Layout-komponenten, blev der implementeret en metode baseret på props.

I Slideshow-komponenten blev der tilføjet to props: fullHeight og showDots. Prop'en fullHeight bestemmer, om slideshowet skal have fuld højde (100vh) eller en fast højde, mens showDots styrer, om navigationsdots skal vises.

Når Slideshow bruges på forsiden (Home), konfigureres den med fullHeight={true} og showDots={true}, så slideshowet fylder hele skærmen og viser dots til navigation. I Layout-komponenten bruges Slideshow med fullHeight={false} og showDots={false}, hvilket resulterer i en tilpasset højde og skjulte dots.

Oprettelse af tilmelding til  nyhedsbrev i footer og sende email til supabase:
Her er de specifikke trin jeg fulgte:

Input Håndtering: Jeg bruger React's useState til at håndtere email-input og gemme eventuelle fejl eller succesmeddelelser.
Validering: Før data sendes til Supabase, validerer jeg inputtet for at sikre, at det er en korrekt formateret email.
Dataindsættelse: Hvis emailen er gyldig, bruger jeg Supabase's insert metode til at tilføje emailen til newsletter_emails-tabellen.
Fejlhåndtering: Hvis der opstår en fejl under indsættelsen, fanger jeg den og viser en passende fejlmeddelelse til brugeren.
Success Feedback: Hvis indsættelsen er succesfuld, viser jeg en bekræftelsesmeddelelse for at informere brugeren om, at deres email er blevet tilføjet.

NAVIgations-font findes ikke.
jeg må forsøge at løse det condensed udtryk med css. jeg googler det og finder ud af at man kan stretche. Det tilføjer jeg til min .menu a, men det virker desværre ikke.

tidsplan:
mandag: opsætning af database og projekt med navigation og hul igennem til supabase
tirsdag: styr på gennemgående layout og styling af forside. opsætning af produkt og produktdetaljerside
onsdag: opsætning af kontakt, login og min side. styr på se og slette beskeder fra min side
torsdag: responsitivitet og layout
fredag: rapport færdig.

Middagsstatus tirsdag: det går godt. jeg var tideligt i gang i morges og jeg er god om formiddagen. jeg har fået lavet nogle vigtige ting og selvom nogle dumme ting kan tage lidt åndssvagt lang tid, så føler jeg mig ovenpå. Jeg skal nu til at i kast med produktsiden. det bliver spændende og jeg kan få den der filtreringsmenu til at virke. jeg tænker jeg kan bruge samme tilgang som i mediesuset. Jeg tager lige en pause og cykler ind med et par regnbukser til walter.

Ahhh! den perfekte pause!! god cykeltur med frisk luft og jeg kunne se langt. aflevere regnbuklser og dermed god samvittiughed. køb af mus til egen komfort. pause fra projet til egen komfort. perfekt. Nu er jeg klar til at fortsætte projektet. jeg skal tiul at bygge produktsiden

jeg kæmpede lidt med at få hentet billederne med til mine produkter, men jeg fandt ud af det til sidst. Nøglen til at få det til at fungere var:

Forbindelsen til Billeddata: Brug af en select-forespørgsel, der inkluderer en images-relation, som henter filename for hvert produkt.

Mapping af Data: Efter forespørgslen bliver produktdataene mappet, så de inkluderer en image_url, som kan bruges i billedvisningen.

Rendering af Billeder: Billederne bliver nu korrekt rendere med den URL, der er gemt i image_url, hvilket gør det muligt at vise produktbillederne korrekt.


Integrere kategorinavigationen i Layout-komponenten og samtidig bevare sorteringsfunktionaliteten i ProductList-komponenten. 

Jeg implementerer dette uden at skabe problemer med hoisting ved at løfte kategorivalget op i Layout-komponenten og derefter passere den valgte kategori som en prop ned til ProductList-komponenten.

Her er hvordan jeg implementerede det:

1. Opdater Layout-komponenten
Vi skal tilføje funktionalitet til at håndtere kategorivalg i Layout-komponenten og derefter sende den valgte kategori ned til ProductList.
2. Opdater ProductList-komponenten
Nu skal vi modtage den valgte kategori fra Layout-komponenten og bruge den til at filtrere produkterne.
3. Brug Layout-komponenten
Når du bruger Layout-komponenten i din app, skal du sørge for at sende en funktion til onCategoryChange, som vil håndtere opdateringen af den valgte kategori i ProductList.
Layout-komponenten håndterer nu kategori-valget og sender den valgte kategori til ProductList.
ProductList modtager selectedCategory som en prop og bruger den til at filtrere og sortere produkterne.
Sorteringsmenuen forbliver i ProductList, hvor brugeren kan vælge at sortere efter alfabetisk orden eller popularitet.

LIKE BUTTON

Jeg implementerede like-funktionen i produktlisten ved at følge en todelt tilgang. Først hentede jeg produktdata med billeder fra Supabase. Derefter hentede jeg likes fra favorite_rows og brugte reduce til at tælle likes for hvert produkt. Denne tælling blev knyttet til hvert produkt.

Jeg sørgede for, at loggede brugere kan like produkter, mens ikke-loggede brugere kan se antallet af likes. Ved at adskille datahentning og likes-opdatering sikrede jeg en effektiv håndtering af både visning og opdatering af likes.

Justering af grid på produclist
jeg tager et valgt om at maksimalt have Xantal tegn i teaseren og så tilføje ... hvis teksten overstiger dette. dette gør jeg for at give øjet ro og bevare ens properstioner på alle elementer i griddet.
how to:
Først tilføjer vi en funktion, der tjekker længden af teaser-teksten og afkorter den, hvis den er for lang.
Inde i din map-funktion, hvor produkterne bliver renderet, kan du bruge denne funktion til at afkorte teaser-teksten. Lad os sige, at den maksimale længde skal være den samme som eksemplet du gav, altså 100 tegn. Jeg har brugt samme funktion på min forside under news.